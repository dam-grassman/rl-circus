{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Overview - Visualizing and Understanding Atari Agents\n",
    "Visualizing and Understanding Atari Agents | Sam Greydanus | 2017 | MIT License"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div id=\"my_id_menu_nb\">run previous cell, wait for 2 seconds</div>\n",
       "<script>\n",
       "function repeat_indent_string(n){\n",
       "    var a = \"\" ;\n",
       "    for ( ; n > 0 ; --n)\n",
       "        a += \"    \";\n",
       "    return a;\n",
       "}\n",
       "// look up into all sections and builds an automated menu //\n",
       "var update_menu_string = function(begin, lfirst, llast, sformat, send, keep_item, begin_format, end_format) {\n",
       "    var anchors = document.getElementsByClassName(\"section\");\n",
       "    if (anchors.length == 0) {\n",
       "        anchors = document.getElementsByClassName(\"text_cell_render rendered_html\");\n",
       "    }\n",
       "    var i,t;\n",
       "    var text_menu = begin;\n",
       "    var text_memo = \"<pre>\\nlength:\" + anchors.length + \"\\n\";\n",
       "    var ind = \"\";\n",
       "    var memo_level = 1;\n",
       "    var href;\n",
       "    var tags = [];\n",
       "    var main_item = 0;\n",
       "    var format_open = 0;\n",
       "    for (i = 0; i <= llast; i++)\n",
       "        tags.push(\"h\" + i);\n",
       "\n",
       "    for (i = 0; i < anchors.length; i++) {\n",
       "        text_memo += \"**\" + anchors[i].id + \"--\\n\";\n",
       "\n",
       "        var child = null;\n",
       "        for(t = 0; t < tags.length; t++) {\n",
       "            var r = anchors[i].getElementsByTagName(tags[t]);\n",
       "            if (r.length > 0) {\n",
       "child = r[0];\n",
       "break;\n",
       "            }\n",
       "        }\n",
       "        if (child == null) {\n",
       "            text_memo += \"null\\n\";\n",
       "            continue;\n",
       "        }\n",
       "        if (anchors[i].hasAttribute(\"id\")) {\n",
       "            // when converted in RST\n",
       "            href = anchors[i].id;\n",
       "            text_memo += \"#1-\" + href;\n",
       "            // passer à child suivant (le chercher)\n",
       "        }\n",
       "        else if (child.hasAttribute(\"id\")) {\n",
       "            // in a notebook\n",
       "            href = child.id;\n",
       "            text_memo += \"#2-\" + href;\n",
       "        }\n",
       "        else {\n",
       "            text_memo += \"#3-\" + \"*\" + \"\\n\";\n",
       "            continue;\n",
       "        }\n",
       "        var title = child.textContent;\n",
       "        var level = parseInt(child.tagName.substring(1,2));\n",
       "\n",
       "        text_memo += \"--\" + level + \"?\" + lfirst + \"--\" + title + \"\\n\";\n",
       "\n",
       "        if ((level < lfirst) || (level > llast)) {\n",
       "            continue ;\n",
       "        }\n",
       "        if (title.endsWith('¶')) {\n",
       "            title = title.substring(0,title.length-1).replace(\"<\", \"&lt;\")\n",
       "         .replace(\">\", \"&gt;\").replace(\"&\", \"&amp;\");\n",
       "        }\n",
       "        if (title.length == 0) {\n",
       "            continue;\n",
       "        }\n",
       "\n",
       "        while (level < memo_level) {\n",
       "            text_menu += end_format + \"</ul>\\n\";\n",
       "            format_open -= 1;\n",
       "            memo_level -= 1;\n",
       "        }\n",
       "        if (level == lfirst) {\n",
       "            main_item += 1;\n",
       "        }\n",
       "        if (keep_item != -1 && main_item != keep_item + 1) {\n",
       "            // alert(main_item + \" - \" + level + \" - \" + keep_item);\n",
       "            continue;\n",
       "        }\n",
       "        while (level > memo_level) {\n",
       "            text_menu += \"<ul>\\n\";\n",
       "            memo_level += 1;\n",
       "        }\n",
       "        text_menu += repeat_indent_string(level-2);\n",
       "        text_menu += begin_format + sformat.replace(\"__HREF__\", href).replace(\"__TITLE__\", title);\n",
       "        format_open += 1;\n",
       "    }\n",
       "    while (1 < memo_level) {\n",
       "        text_menu += end_format + \"</ul>\\n\";\n",
       "        memo_level -= 1;\n",
       "        format_open -= 1;\n",
       "    }\n",
       "    text_menu += send;\n",
       "    //text_menu += \"\\n\" + text_memo;\n",
       "\n",
       "    while (format_open > 0) {\n",
       "        text_menu += end_format;\n",
       "        format_open -= 1;\n",
       "    }\n",
       "    return text_menu;\n",
       "};\n",
       "var update_menu = function() {\n",
       "    var sbegin = \"\";\n",
       "    var sformat = '<a href=\"#__HREF__\">__TITLE__</a>';\n",
       "    var send = \"\";\n",
       "    var begin_format = '<li>';\n",
       "    var end_format = '</li>';\n",
       "    var keep_item = -1;\n",
       "    var text_menu = update_menu_string(sbegin, 2, 4, sformat, send, keep_item,\n",
       "       begin_format, end_format);\n",
       "    var menu = document.getElementById(\"my_id_menu_nb\");\n",
       "    menu.innerHTML=text_menu;\n",
       "};\n",
       "window.setTimeout(update_menu,2000);\n",
       "            </script>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from jyquickhelper import add_notebook_menu\n",
    "add_notebook_menu()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from __future__ import print_function\n",
    "import warnings ; warnings.filterwarnings('ignore') # mute warnings, live dangerously\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib as mpl ; mpl.use(\"Agg\")\n",
    "import matplotlib.animation as manimation\n",
    "import matplotlib.patches as patches\n",
    "\n",
    "import torch\n",
    "from torch.autograd import Variable\n",
    "import torch.nn.functional as F\n",
    "\n",
    "import gym, os, sys, time, argparse\n",
    "sys.path.append('..')\n",
    "from visualize_atari import *"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 1. Load agent, build environment, play an episode"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As an example thourough the notebook, we'll use Breakout from the Atari Games 2600. We start by generating a rollout of an episode played by an agent, using a trained A3C policy network."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "set up dir variables and environment...\n",
      "initialize agent and try to load saved weights...\n",
      "\tloaded model: breakout-v0\\strong.40.tar\n",
      "get a rollout of the policy...\n",
      "\tstep # 2293, reward 359\r"
     ]
    }
   ],
   "source": [
    "env_name = 'Breakout-v0'\n",
    "save_dir = 'figures/'\n",
    "\n",
    "import numpy as np\n",
    "np.random.seed(1)\n",
    "\n",
    "print(\"set up dir variables and environment...\")\n",
    "load_dir = '{}/'.format(env_name.lower())\n",
    "meta = get_env_meta(env_name)\n",
    "env = gym.make(env_name) ; env.seed(1)\n",
    "\n",
    "print(\"initialize agent and try to load saved weights...\")\n",
    "model = NNPolicy(channels=1, num_actions=env.action_space.n)\n",
    "_ = model.try_load(load_dir, checkpoint='*.tar') ; torch.manual_seed(1)\n",
    "\n",
    "print(\"get a rollout of the policy...\")\n",
    "history = rollout(model, env, max_ep_len=3e3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's study a specific frame."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 936x360 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "frame_ix= 1890\n",
    "\n",
    "fig, ax = plt.subplots(1,4, figsize = (13,5))\n",
    "for a in fig.axes: a.get_xaxis().set_visible(False) ; a.get_yaxis().set_visible(False) ; \n",
    "for i in range(4):\n",
    "    if i == 3 : \n",
    "        ax[i].patch.set_edgecolor('red') ; ax[i].patch.set_linewidth('7')  \n",
    "    ax[i].imshow(history['ins'][frame_ix-12+i*4])\n",
    "    ax[i].set_title('Frame {}'.format(frame_ix-12+i*4))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2. Get perturbation saliency map"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Perturbation-based saliency maps are computed using localized gaussian-noise perturbation on the original observation, acting like a localized blur to produce uncertainty on the targeted area.\n",
    "\n",
    "let $I_t$ be the studied image, and $\\Phi(I_t, i,j)$ the resulting perturbated image with noise centered at pixel coordinates $(i,j)$. The pertubartion is defined as follow : \n",
    "\n",
    "$$ \\Phi(I_t, i,j) = I_t \\circ (1 - M(i,j)) + A(I_t, \\sigma_A) \\circ M(i,j)$$ \n",
    "\n",
    "where : \n",
    "\n",
    "- $\\circ$ denotes the Hadamard product (element-wise matrix multiplication)\n",
    "\n",
    "- $A(I_t, \\sigma_A)$ the gaussian blur ($\\sigma_A = 3$ said to be a good value to use in practice)\n",
    "\n",
    "- $M(i,j) \\in (0,1)^{m \\times n}$ the mask image (2D Gaussian centered at (i,j)).\n",
    "\n",
    "Let's have a deeper look with an example to illustrate the pertubation process."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### a. Generate a mask with Gaussian noise"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.ndimage.filters import gaussian_filter\n",
    "\n",
    "def get_mask(center, size, r):\n",
    "    ''' Generate the mask M(i,j) '''\n",
    "    y,x = np.ogrid[-center[0]:size[0]-center[0], -center[1]:size[1]-center[1]]\n",
    "    keep = x*x + y*y <= 1\n",
    "    mask = np.zeros(size) ; mask[keep] = 1 # select a circle of pixels\n",
    "    mask = gaussian_filter(mask, sigma=r) # blur the circle of pixels (2D Gaussian for r=r^2=1)\n",
    "    return mask/mask.max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "centers = [(20,20), (50,50), (60,20)] # list of coordinates (x,y) to be the center of the perturbation\n",
    "r = 10 # radius of the gaussian noise perturbation\n",
    "size = (80,80) # final size of the generated mask\n",
    "\n",
    "fig, ax = plt.subplots(1,3, figsize = (10,5))\n",
    "for a in fig.axes: a.get_xaxis().set_visible(False) ; a.get_yaxis().set_visible(False)\n",
    "for i in range(3):\n",
    "    ax[i].imshow(get_mask(centers[i],size,r)) \n",
    "    ax[i].set_title('M{0}; r={1}'.format(centers[i], r))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### b. Generate a perturbed observation given a gaussian noisy mask"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 936x360 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "x,y = (20,20) ; r = 5 ; size = (80,80)\n",
    "mask = get_mask((x,y),size,r)\n",
    "\n",
    "fig, ax = plt.subplots(1,4, figsize = (13,5))\n",
    "for a in fig.axes: a.get_xaxis().set_visible(False) ; a.get_yaxis().set_visible(False)\n",
    "\n",
    "ax[0].imshow(mask) ; ax[0].set_title('Mask M(i,j)') \n",
    "ax[1].imshow(prepro(history['ins'][2107])[0]) ; ax[1].set_title('Original $I_t$')\n",
    "ax[2].imshow(occlude(prepro(history['ins'][2107]).squeeze(), mask).reshape(80,80)) \n",
    "ax[2].set_title('$\\Phi(I_t, i,j)$')\n",
    "ax[3].imshow(occlude(prepro(history['ins'][2107]).squeeze(), mask).reshape(80,80)) ;\n",
    "rect = patches.Rectangle((x-2*r,y-2*r),4*r,4*r,linewidth=1,edgecolor='r',facecolor='none')\n",
    "ax[3].add_patch(rect) ;  ax[3].set_title('Local perturbation')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### c. Compute the saliency score matrix of an observation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So as to answer the question : *How much does removing information from the resgion around location (i,j) change policy ?*, the authors propose a saliency metric $S_\\pi(t,i,j)$ which will quantify the impact of a perturbation on the output of the function of interest $\\pi$.\n",
    "\n",
    "More specifically, let's $\\pi_u(I_t)$ be the logistic units (or logits) right before the last final softmax activation of $\\pi$, we define $S$ as : \n",
    "\n",
    "$$S_\\pi(t,i,j) = \\frac{1}{2} || \\pi_u(I_t) - \\pi_u(\\Phi(I_t,i,j))||^2$$\n",
    "\n",
    "As a remark, the difference $\\pi_u(I_t) - \\pi_u(\\Phi(I_t,i,j))$ is thought to be a finite diffetence approximate if the directinal gradient $\\nabla_v \\pi_u (I_t)$ where $v$ would denote the gradient in the direction of the perturbed image."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def run_through_model(model, history, ix, interp_func=None, mask=None, blur_memory=None, mode='actor'):\n",
    "    ''' Return the output of the network of interest, given the rollout history \n",
    "        and the given studied frame'''\n",
    "    if mask is None:\n",
    "        im = prepro(history['ins'][ix])\n",
    "    else:\n",
    "        assert(interp_func is not None, \"interp func cannot be none\")\n",
    "        im = interp_func(prepro(history['ins'][ix]).squeeze(), mask).reshape(1,80,80) # perturb input I -> I'\n",
    "    tens_state = torch.Tensor(im)\n",
    "    state = Variable(tens_state.unsqueeze(0), volatile=True)\n",
    "    hx = Variable(torch.Tensor(history['hx'][ix-1]).view(1,-1))\n",
    "    cx = Variable(torch.Tensor(history['cx'][ix-1]).view(1,-1))\n",
    "    if blur_memory is not None: \n",
    "        cx.mul_(1-blur_memory) # perturb memory vector\n",
    "    #print('state shape :', state.shape, 'Hx :', hx.shape, 'cx :', cx.shape)\n",
    "    return model((state, (hx, cx)))[0] if mode == 'critic' else model((state, (hx, cx)))[1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "prepro = lambda img: imresize(img[35:195].mean(2), (80,80)).astype(np.float32).reshape(1,80,80)/255.\n",
    "searchlight = lambda I, mask: I*mask + gaussian_filter(I, sigma=3)*(1-mask) # choose an area NOT to blur\n",
    "occlude = lambda I, mask: I*(1-mask) + gaussian_filter(I, sigma=3)*mask # choose an area to blur"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The saliency score having been defined, we construct the score matrix as an heatmap of the computed score for each generated perturbation at pixel (i,j) (with stride 5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "interp_func = occlude\n",
    "mode='critic'\n",
    "d = 5 \n",
    "\n",
    "L = run_through_model(model, history, frame_ix, interp_func, mask=None, mode=mode)\n",
    "scores = np.zeros((int(80/d)+1,int(80/d)+1)) # saliency scores S(t,i,j)\n",
    "for i in range(0,80,d):\n",
    "    for j in range(0,80,d):\n",
    "        mask = get_mask(center=[i,j], size=[80,80], r=r)\n",
    "        l = run_through_model(model, history, frame_ix, interp_func, mask=mask, mode=mode)\n",
    "        scores[int(i/d),int(j/d)] = (L-l).pow(2).sum().mul_(.5).data\n",
    "pmax = scores.max()\n",
    "scores_resh = imresize(scores, size=[80,80], interp='bilinear').astype(np.float32)\n",
    "scores_resh = pmax * scores_resh / scores_resh.max()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1,2, figsize = (7,5))\n",
    "for a in fig.axes: a.get_xaxis().set_visible(False) ; a.get_yaxis().set_visible(False)\n",
    "\n",
    "ax[0].imshow(scores) ; ax[0].set_title('Score matrix')\n",
    "ax[1].imshow(scores_resh)  ; ax[1].set_title('Score matrix full-scale') ; plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "def score_frame(model, history, ix, r, d, interp_func, mode='actor'):\n",
    "    ''' Wrap all the previous step to compute the score matrix of\n",
    "        a given frame'''\n",
    "    # r: radius of blur\n",
    "    # d: density of scores (if d==1, then get a score for every pixel...\n",
    "    #    if d==2 then every other, which is 25% of total pixels for a 2D image)\n",
    "    assert mode in ['actor', 'critic'], 'mode must be either \"actor\" or \"critic\"'\n",
    "    L = run_through_model(model, history, ix, interp_func, mask=None, mode=mode)\n",
    "    scores = np.zeros((int(80/d)+1,int(80/d)+1)) # saliency scores S(t,i,j)\n",
    "    for i in range(0,80,d):\n",
    "        for j in range(0,80,d):\n",
    "            mask = get_mask(center=[i,j], size=[80,80], r=r)\n",
    "            l = run_through_model(model, history, ix, interp_func, mask=mask, mode=mode)\n",
    "            #print((L-l).pow(2).sum().mul_(.5).data)\n",
    "            scores[int(i/d),int(j/d)] = (L-l).pow(2).sum().mul_(.5).data#[0]\n",
    "    pmax = scores.max()\n",
    "    scores = imresize(scores, size=[80,80], interp='bilinear').astype(np.float32)\n",
    "    return pmax * scores / scores.max()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3. Sum up and run it for both actor and critic"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now we can generate the saliency score matrix for any given frame an model, let's apply it on the breakout obervation using the A3C policy network. The authors propose to study the two head of the A3C network speraelty, with the critic on the one side, the actor on the other side so as to compare the two resulting saliency maps."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "radius = 5\n",
    "density = 5\n",
    "actor_saliency = score_frame(model, history, frame_ix, radius, density, interp_func=occlude, mode='actor')\n",
    "critic_saliency = score_frame(model, history, frame_ix, radius, density, interp_func=occlude, mode='critic')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(1,2, figsize = (10,5))\n",
    "for a in fig.axes: a.get_xaxis().set_visible(False) ; a.get_yaxis().set_visible(False)\n",
    "ax[0].imshow(actor_saliency) ; ax[0].set_title('Actor Saliency Score')\n",
    "ax[1].imshow(critic_saliency) ; ax[1].set_title('Critic Saliency Score')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Final Saliency Map"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can now overlay the saliency maps on the original observation to get the ultimate visalization."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x360 with 4 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# upsample perturbation saliencies\n",
    "frame = history['ins'][frame_ix].squeeze().copy()\n",
    "frame_actor = saliency_on_atari_frame(actor_saliency, frame, fudge_factor=500, channel=2)\n",
    "frame_critic = saliency_on_atari_frame(critic_saliency, frame, fudge_factor=100, channel=0)\n",
    "perturbation_map = saliency_on_atari_frame(critic_saliency, frame_actor, fudge_factor=100, channel=0)\n",
    "\n",
    "fig, ax = plt.subplots(1,4,figsize=(15,5))\n",
    "for a in fig.axes: a.get_xaxis().set_visible(False) ; a.get_yaxis().set_visible(False)\n",
    "\n",
    "ax[0].imshow(frame) ; ax[0].set_title('Original Frame')\n",
    "ax[1].imshow(frame_actor) ; ax[1].set_title('Actor Saliency Map')\n",
    "ax[2].imshow(frame_critic) ; ax[2].set_title('Critic Saliency Map')\n",
    "ax[3].imshow(perturbation_map) ; ax[3].set_title('Final Saliency Map')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Comparison with Jacobian Saliency Map"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The authors propose in the article to compare the pertubation-based saliency map with a Jacobian gradient-based one to show how much better is their approach."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "def jacobian(model, layer, top_dh, X):\n",
    "    global top_h_ ; top_h_ = None\n",
    "    def hook_top_h(m, i, o): global top_h_ ; top_h_ = o.clone()\n",
    "    hook1 = layer.register_forward_hook(hook_top_h)\n",
    "    _ = model(X) # do a forward pass so the forward hooks can be called\n",
    "\n",
    "    # backprop positive signal\n",
    "    #print(top_h_.shape, top_dh.shape)\n",
    "    torch.autograd.backward(top_h_, top_dh.clone(), retain_graph = True) # backward hooks are called here\n",
    "    hook1.remove()\n",
    "    return X[0].grad.data.clone().numpy(), X[0].data.clone().numpy()\n",
    "\n",
    "# derivative is simply the output policy distribution\n",
    "top_dh_actor = torch.Tensor(history['logits'][frame_ix]).view(1,-1)\n",
    "top_dh_critic = torch.Tensor(history['values'][frame_ix]).view(1,-1).fill_(1)\n",
    "\n",
    "# get input\n",
    "tens_state = torch.Tensor(prepro(history['ins'][frame_ix]))\n",
    "state = Variable(tens_state.unsqueeze(0), requires_grad=True)\n",
    "hx = Variable(torch.Tensor(history['hx'][frame_ix-1]).view(1,-1))\n",
    "cx = Variable(torch.Tensor(history['cx'][frame_ix-1]).view(1,-1))\n",
    "X = (state, (hx, cx))\n",
    "actor_jacobian, _ = jacobian(model, model.actor_linear, top_dh_actor, X)\n",
    "state.grad.mul_(0) ; X = (state, (hx, cx))\n",
    "critic_jacobian, _ = jacobian(model, model.critic_linear, top_dh_critic, X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "# upsample jacobian saliencies\n",
    "frame = history['ins'][frame_ix].squeeze().copy()\n",
    "frame = saliency_on_atari_frame((actor_jacobian**2).squeeze(), frame, fudge_factor=1, channel=2, sigma=0)\n",
    "jacobian_map = saliency_on_atari_frame((critic_jacobian**2).squeeze(), frame, fudge_factor=15, channel=0, sigma=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 525x375 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "f = plt.figure(figsize=(7,5), dpi=75)\n",
    "\n",
    "plt.subplot(1,2,1)\n",
    "plt.imshow(jacobian_map)\n",
    "plt.title('Jacobian', fontsize=20)\n",
    "\n",
    "plt.subplot(1,2,2)\n",
    "plt.imshow(perturbation_map)\n",
    "plt.title('Ours', fontsize=20)\n",
    "\n",
    "for a in f.axes: a.get_xaxis().set_visible(False) ; a.get_yaxis().set_visible(False)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "_________________________________"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
